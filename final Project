What is TensorFlow-Lite-Object-Detection?
Given an image or a video stream, an object detection model can identify which of a known set of objects might be present and provide information about their positions within the image.
How to Run TensorFlow Lite Models on Windows
Step 1. Download and Install Anaconda
First, install Anaconda, which is a Python environment manager that greatly simplifies Python package management and deployment. Anaconda allows you to create Python virtual environments on your PC without interfering with existing installations of Python. Go to the Anaconda Downloads page and click the Download button.

Step 2. Set Up Virtual Environment and Directory
Go to the Start Menu, search for “Anaconda Command Prompt” and click it to open up a command terminal. We'll create a folder called tflite1 directly in the C: drive. (you can use any folder location) Create the folder and move into it by issuing the following commands in the terminal:
					mkdir C:\tflite1
					cd C:\tflite1
Next, create a Python 3.9 virtual environment by issuing:
					conda create --name tflite1-env python=3.9
Enter “y” when it asks if you want to process
Next:
	        conda activate tflite1-env
	        pip install tensorflow opencv-python protobuf==3.20.*
Download the detection scripts from this repository by issuing:
curl https://raw.githubusercontent.com/EdjeElectronics/TensorFlow-Lite-Object-Detection-on-Android-and-Raspberry-Pi/master/TFLite_detection_image.py --output TFLite_detection_image.py
curl https://raw.githubusercontent.com/EdjeElectronics/TensorFlow-Lite-Object-Detection-on-Android-and-Raspberry-Pi/master/TFLite_detection_video.py --output TFLite_detection_video.py
curl https://raw.githubusercontent.com/EdjeElectronics/TensorFlow-Lite-Object-Detection-on-Android-and-Raspberry-Pi/master/TFLite_detection_webcam.py --output TFLite_detection_webcam.py
curl https://raw.githubusercontent.com/EdjeElectronics/TensorFlow-Lite-Object-Detection-on-Android-and-Raspberry-Pi/master/TFLite_detection_stream.py --output TFLite_detection_stream.py

Step 3. Move TFLite Model into Directory: Next, take the custom TFLite model that was trained and downloaded from the Colab notebook and move it into the C:\tflite1 directory.
				tar -xf custom_model_lite.zip
At this point, you should have a folder at C:\tflite1\custom_model_lite which contains at least
detect.tflite and labelamp.txt file
Step 4. Run TensorFlow Lite Model!
Alright! Now that everything is set up, running the TFLite model is easy. Just call one of the detection scripts and point it at your model folder with the  --modeldir option :
				python TFLite_detection_webcam.py --modeldir=custom_model_lite
Conclusion:
Have fun using TensorFlow Lite! Stay tuned for more examples on how to build cool applications around your model.
								                                                                                            	Thank you



